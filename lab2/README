#Mingxuan Guo, 1003446719, mingxuan.guo@mail.utoronto.ca
#Xiaolin Liu, 1004430305, aisling.liu@mail.utoronto.ca

Part 1: TOTP (Google Autheticator)
1.1 Generating an otpauth:// URI
Accountname issuer and secret have been properly encoded
accountname and issuer were converted using the provided
urlEncode function, secret_hex was converted firstly from 
hex to binary array,then to base_32. All were then properly
passed in to barcode function.

1.2 Validating the Codes
At first we convert the secret_hex to a 10-bit hexdecimal, then
XOR it with opad and ipad to get outer_key and inner_key. Next
we calcalate the meassage from current unix time and subsequently
the HMAC value. Finally we convert the selected bytes to integer,
as a result this TOTP value will be compared with user's input.

Part 2:
getAuthenticatorStatus:
Set the header and send a GET request to the server, and then 
extract the device's authentication status and the enrollment 
of the biometric modalities from the server's reply in JSON format.

sendStepup:
Set the header and send a POST request with user id, transaction id
and message "login request" to the server. Then save the uuid inside 
"user_verification" from the server's reply to stepupid.

getStepupStatus:
Set the header and send a GET request to the server with stepupid 
set up previously, and then extract and return "status" inside 
"user_verification" from the server's reply in JSON format.
